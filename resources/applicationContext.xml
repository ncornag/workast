<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd"
    default-autowire="byName">
    
    <!--
        Configurer that replaces ${...} placeholders with values from a properties file 
        & properties accesor to be injected in the services 
    -->
    <bean id="abstract.appProperties" abstract="true" class="es.workast.utils.RecursivePropertiesFactoryBean"
          p:ignoreUnresolvablePlaceholders="true" p:order="10" lazy-init="false" 
          p:systemPropertiesModeName="SYSTEM_PROPERTIES_MODE_OVERRIDE"
          p:ignoreResourceNotFound="true">
        <property name="locations">
            <list>
                <value>classpath:properties/*.properties</value>
            </list>
        </property>      
        <property name="localOverride" value="true" />
    </bean>

    <bean id="appProperties" parent="abstract.appProperties"/>
    
    <!--
        Message source for this context, loaded from localized "messages_xx" files.
    -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames"  >
            <list>
                <value>/WEB-INF/classes/messages</value>
            </list>
        </property> 
        <property name="cacheSeconds" value="1"/>
    </bean>
    
    <!--
        Activates various annotations to be detected in bean classes: Spring's
        @Required and @Autowired, as well as JSR 250's @PostConstruct,
        @PreDestroy and @Resource (if available) and JPA's @PersistenceContext
        and @PersistenceUnit (if available).
    -->
    <context:annotation-config/>
    
    <!--
        The controllers are autodetected POJOs labeled with the @Controller annotation.
        DefaultAnnotationHandlerMapping is driven by these annotations and is 
        enabled by default with Java 5+:
    -->
    <context:component-scan base-package="es.workast" scoped-proxy="targetClass" />

    <!-- Persistence -->
    <import resource="persistence-config.xml"/>
    
    <!-- Security -->
    <import resource="security-config.xml"/>
    
    <!-- Templates -->
    <util:properties id="templates" location="classpath:templates.xml"/>

    <!-- 
        - Maps request URLs to views (defaultHandler Selects view names to render based 
        - on the request URI: e.g. /index selects "index") 
    -->
    <bean id="viewMappings" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="defaultHandler">
            <bean class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>
        </property>
        <property name="order" value="20" />
    </bean>
            
    <!-- 
        - Enables convention-based request URL mapping to @Controllers 
        - e.g. /hotels/* maps to HotelsController 
    -->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <!-- 
        <property name="pathPrefix" value="admin"/>
         -->
        <property name="order" value="10" />
    </bean>
    
    <!-- JSP resolver -->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
        
</beans>
