<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="true">

    <bean id="dataSource" class="es.workast.utils.InitializingDataSourceFactoryBean" autowire-candidate="false" lazy-init="false">
        <property name="info" value="DataSource in [${db.url}] with user [${db.username}]" />
        <property name="initializeDatabase" value="${db.initializeDatabase}" />
        <property name="dataSource" ref="internalDataSource" />
        <property name="flagTable" value="${db.flagTable}" />
        <property name="initScripts" value="${db.initScripts}" />
        <property name="destroyScripts" value="${db.destroyScripts}" />
    </bean>
    
    <!-- http://commons.apache.org/dbcp/configuration.html -->
    <bean id="internalDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${db.driver}" 
          p:url="${db.url}"
          p:username="${db.username}"
          p:password="${db.password}"
          p:defaultCatalog="${db.schema}"
          
          p:initialSize="5"
          p:maxActive="10"
          p:maxIdle="5"
          p:minIdle="5"
          p:maxWait="-1"
          
          p:testOnBorrow="true"
          p:validationQuery="${sql.validationQuery}"
          p:timeBetweenEvictionRunsMillis="3600000"
          p:numTestsPerEvictionRun="5"
          p:minEvictableIdleTimeMillis="1800000"
          
          />
          
    <bean id="sessionFactory" class="es.workast.utils.ExtendedAnnotationSessionFactoryBean" p:dataSource-ref="dataSource">
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <!-- 
                <prop key="hibernate.cache.provider_class">org.terracotta.hibernate.TerracottaHibernateCacheProvider</prop>
                 -->
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
            </props>
        </property>
        <property name="basePackages">
          <list>
            <value>${base-package}</value>
          </list>
        </property>
        <property name="entityCacheStrategies">
            <props> 
                <prop key="es.workast.model.activity.Activity">read-write</prop>
                <prop key="es.workast.model.activity.ActivityTag">read-write</prop>
                <prop key="es.workast.model.tag.Tag">read-write</prop>
                <prop key="es.workast.model.person.Person">read-write</prop>
                <prop key="es.workast.model.group.Group">read-write</prop>
                <prop key="es.workast.model.tag.Tag">read-write</prop>
            </props>
        </property>     
        <property name="collectionCacheStrategies">
        	<props>
    			<prop key="es.workast.model.activity.Activity.tags">read-write</prop>
    		</props>
    	</property>
    </bean>
    
    <!-- Spring transaction management -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" p:sessionFactory-ref="sessionFactory"/>
    
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>
